#!/bin/sh
# -*-scheme-*-
exec guile -s $0
!#

(use-modules (burrow spectrum))

(define (example-spectrum-path str)
  (string-append (getenv "EXAMPLE_DIR") "/" str))

(define (spectrum-grab-point spec x y z)
  (spectrum-peek
   (spectrum-project
    (spectrum-project
     (spectrum-project spec x) y) z) 0))

(define spec     (spectrum-nih-from-file (example-spectrum-path "cbcaconh.DAT")))
(define spec-zyx (spectrum-nih-from-file (example-spectrum-path "cbcaconh-zyx.DAT")))

(define (test-point x y z)
  (and (= (spectrum-grab-point spec x y z)
	  (spectrum-grab-point spec-zyx z y x))))

(if (= (spectrum-grab-point spec 13 20 5)
       (spectrum-grab-point spec-zyx 13 20 5))
    (error "untransposed indices with transposed spectra"))

(if (not (and (test-point 22 15 9)
	      (test-point 3 19 20)
	      (test-point 1 24 2)))
    (error "transposed indices matching transposed data"))

(define (parameter-test name op)
  (if (not (and
	    (= (op spec 0)(op spec-zyx 2))
	    (= (op spec 1)(op spec-zyx 1))
	    (= (op spec 2)(op spec-zyx 0))))
      (error name)))

(parameter-test "transposed sweep width"        spectrum-sw)
(parameter-test "transposed carrier frequency"  spectrum-sf)
(parameter-test "transposed number of points"   spectrum-np)
(parameter-test "transposed origin"             spectrum-orig)
